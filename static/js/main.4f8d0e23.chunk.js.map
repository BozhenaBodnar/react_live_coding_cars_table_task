{"version":3,"sources":["api/colors.ts","App.tsx","api/cars.ts","index.tsx"],"names":["id","name","carsWithColor","brand","rentPrice","colorId","map","car","color","colorsFromServer","find","App","useState","listOfCars","setListOfCars","words","setWords","type","placeholder","value","onChange","event","target","filtered","filter","loverCaseBrand","toLowerCase","loverCaseWords","includes","disabled","String","style","ReactDOM","render","document","getElementById"],"mappings":"4NAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,Q,OCSXC,ECZS,CACb,CACEF,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,GAAIG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEL,GAAI,GAAIG,MAAO,aAAcC,UAAW,IAAKC,QAAS,IDpBrBC,KAAI,SAAAC,GAAG,kCACvCA,GADuC,IAE1CC,OAVoBH,EAUAE,EAAIF,QATJI,EAAiBC,MAAK,SAAAF,GAAK,OAC7CA,EAAMR,KAAOK,MAGO,QALH,IAACA,KAiBTM,EAAgB,WAC3B,MAAoCC,mBAASV,GAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoCA,OACE,gCACE,uBACEC,KAAK,SACLC,YAAY,oBACZC,MAAOJ,EACPK,SA9BmB,SAACC,GACxB,IAAQF,EAAUE,EAAMC,OAAhBH,MACFI,EAAWV,EAAWW,QAAO,SAAAjB,GACjC,IAAMkB,EAAiBlB,EAAIJ,MAAMuB,cAC3BC,EAAiBZ,EAAMW,cAE7B,OAAOD,EAAeG,SAASD,MAGjCX,EAASG,GACTL,EAAcS,MAuBZ,mCACE,wBAAQvB,GAAG,IAAI6B,UAAQ,EAAvB,2BACCpB,EAAiBH,KAAI,SAAAE,GAAK,OACzB,wBACER,GAAI8B,OAAOtB,EAAMR,IADnB,SAIGQ,EAAMP,MAFFO,EAAMR,UAOjB,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGa,EAAWP,KAAI,SAAAC,GAAG,eACjB,+BACE,6BAAKA,EAAIP,KACT,6BAAKO,EAAIJ,QACT,oBAAI4B,MAAO,CAAEvB,MAAK,UAAED,EAAIC,aAAN,aAAE,EAAWP,MAA/B,mBAAwCM,EAAIC,aAA5C,aAAwC,EAAWP,OACnD,6BAAKM,EAAIH,2B,ME1FvB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f8d0e23.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\nconst getColorById = (colorId: number) => {\n  const findedColor = colorsFromServer.find(color => (\n    color.id === colorId\n  ));\n\n  return findedColor || null;\n};\n\nconst carsWithColor = carsFromServer.map(car => ({\n  ...car,\n  color: getColorById(car.colorId),\n}));\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nexport const App: React.FC = () => {\n  const [listOfCars, setListOfCars] = useState(carsWithColor);\n  const [words, setWords] = useState('');\n  // const [selectedColor, setSelectedColor] = useState(0);\n\n  // const handleClickOnColor = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  //   const { value } = event.target;\n  //   const filtered = listOfCars.filter(car => (\n  //     car.color?.name\n  //   ));\n\n  //   setSelectedColor();\n  // };\n\n  const handleClickInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const filtered = listOfCars.filter(car => {\n      const loverCaseBrand = car.brand.toLowerCase();\n      const loverCaseWords = words.toLowerCase();\n\n      return loverCaseBrand.includes(loverCaseWords);\n    });\n\n    setWords(value);\n    setListOfCars(filtered);\n  };\n\n  // const filterByInput = () => {\n  //   const filtered = listOfCars.filter(car => {\n  //     const loverCaseBrand = car.brand.toLowerCase();\n  //     const loverCaseWords = words.toLowerCase();\n\n  //     return loverCaseBrand.includes(loverCaseWords);\n  //   });\n\n  //   return filtered;\n  // };\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={words}\n        onChange={handleClickInput}\n      />\n\n      <select>\n        <option id=\"0\" disabled>Chose a color</option>\n        {colorsFromServer.map(color => (\n          <option\n            id={String(color.id)}\n            key={color.id}\n          >\n            {color.name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {listOfCars.map(car => (\n            <tr>\n              <td>{car.id}</td>\n              <td>{car.brand}</td>\n              <td style={{ color: car.color?.name }}>{car.color?.name}</td>\n              <td>{car.rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}